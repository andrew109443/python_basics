'''
1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого элемента.
Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
'''
some_list = ['a', 123, 9.0, [], {'key':'val'}]
for element in some_list:
    print(type(element))
'''
2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д. 
При нечетном количестве элементов последний сохранить на своем месте. Для заполнения списка элементов необходимо использовать функцию input().
'''
input_list = input('Введите элементы списка через пробел').split(' ')
new_list = []
i = 0
len_list = len(input_list)

if len_list % 2 == 0:
    while i < len_list:
        new_list.append(input_list[i+1])
        new_list.append(input_list[i])
        i+=2
elif len_list % 2 == 1:
    while i < len_list - 1:
        new_list.append(input_list[i+1])
        new_list.append(input_list[i])
        i+=2
    new_list.append(input_list[-1])

print(new_list)
'''
3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
Напишите решения через list и через dict.
'''
month_list = [[1,2,12], [3,4,5], [6,7,8], [9,10,11]]
name_list = ['зима', 'весна', 'лето', 'осень']
month_dict = {1 : 'зима', 	2 : 'зима', 	3 : 'весна', 	4 : 'весна', 	5 : 'весна', 	6 : 'лето', 	7 : 'лето', 	8 : 'лето', 	9 : 'осень', 	10 : 'осень', 	11 : 'осень', 	12 : 'зима'}
i = 0

num_input = int(input('Введите число от 1 до 12: '))

for li in month_list:
    i += 1
    if num_input in li:
        break

print(name_list[i-1])
print(month_dict[12])
'''
4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.
'''
string_list = input('Введите элементы списка через пробел').split(' ')

for i, string in enumerate(string_list, start=1):
    print(i, string[:10])
'''
5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. 
У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями, 
то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
'''
my_list = [7, 5, 3, 3, 2]
input_num = int(input('Введите число: '))

for num in my_list:
    if input_num > num:
        print(my_list.index(num))
        my_list.insert(my_list.index(num), input_num)
        break

print(my_list)
'''
6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. 
Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — 
номер товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения). 
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
Пример готовой структуры:
[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}), 
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]
Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, 
например название, а значение — список значений-характеристик, например список названий товаров.
Пример:
{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}
'''
goods_list = []
result_dict = {}
i = 1

input_goods_num = int(input('Введите количество видов товаров: '))

while i <= input_goods_num:
    goods_list.append((
        i,{
            'название': input('Введите название товара: '),
            'цена': int(input('Введите цену товара: ')),
            'количество': int(input('Введите количество товара: ')),
            'eд': input('Введите eдиницы измерения товара: '),
           }
    ))
    i += 1

for item in goods_list:
    for key, value in item[1].items():
        try:
            a = result_dict[key][:]
            a.append(item[1][key])
            result_dict.update({key : a})
        except:
            result_dict.update({key: [item[1][key]]})

print(result_dict)
